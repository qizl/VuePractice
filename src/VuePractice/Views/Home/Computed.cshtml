@{
    ViewBag.Title="计算属性和侦听器";
}

<partial name="_Base"/>

<div id="app">
    <h2>计算属性</h2>
    <h5>#基础例子</h5>
    <p>Original message:"{{message}}"</p>
    <p>Computed reversed message:"{{reversedMessage}}"</p>
    <p>Reversed message:"{{reversedMessageM()}}"</p>
    <input v-model='message'/>
    <p>Computed Date now:'{{getDate}}'</p>
    <p>Computed Date now1:'{{getDate}}'</p>
    <p>Date now:'{{getDateM()}}'</p>
    <p>Date now1:'{{getDateM()}}'</p>

    <h5>#计算属性缓存 vs 方法</h5>
    <div>{{fullName}}</div>
    <input v-model='firstName'/>
    <input v-model='lastName'/>

    <h5>#计算属性的 setter</h5>
    <input v-model='fullName1'>

    
    <h2>侦听器</h2>
    <p>
        Ask a yes/no question:
        <input v-model="question">
    </p>
    <p>{{answer}}</p>
    
    <h5>#本页脚本：</h5>
    <pre v-pre>var app = new Vue({
    el: &#39;#app&#39;,
    data: {
        message: &#39;Hello Vue!&#39;,
        firstName: &#39;Foo&#39;,
        lastName: &#39;Bar&#39;,
        // fullName:&#39;Foo Bar&#39;,
        question: &#39;&#39;,
        answer: &#39;I cannot give you an answer until you ask a question!&#39;
    },
    methods: {
        reversedMessageM: function () {
            return this.message.split(&#39;&#39;).reverse().join(&#39;&#39;);
        },
        getDateM: function () {
            this.sleep(10);
            var now = new Date();
            return now.toLocaleTimeString() + &#39; &#39; + now.getMilliseconds();
        },
        sleep: function (delay) {
            var start = (new Date()).getTime();
            while ((new Date()).getTime() - start &lt; delay) {
                continue;
            }
        },
        getAnswer: function () {
            if (this.question.indexOf(&#39;?&#39;) === -1) {
                this.answer = &#39;Questions usually contain a question mark. ;-)&#39;
                return
            }
            this.answer = &#39;Thinking...&#39;
            var vm = this
            axios.get(&#39;https://yesno.wtf/api&#39;)
                .then(function (response) {
                    vm.answer = _.capitalize(response.data.answer)
                })
                .catch(function (error) {
                    vm.answer = &#39;Error! Could not reach the API. &#39; + error
                })
        }
    },
    computed: {
        reversedMessage: function () {
            return this.message.split(&#39;&#39;).reverse().join(&#39;&#39;);
        },
        getDate: function () {
            this.sleep(10);
            var now = new Date();
            return now.toLocaleTimeString() + &#39; &#39; + now.getMilliseconds();
        },
        fullName: function () {
            return this.firstName + &#39; &#39; + this.lastName;
        },
        fullName1: {
            get: function () {
                return this.firstName + &#39; &#39; + this.lastName;
            },
            set: function (n) {
                var names = n.split(&#39; &#39;);
                this.firstName = names[0];
                this.lastName = names[1];
            }
        }
    },
    watch: {
        question: function (newQuestion, oldQuestion) {
            this.answer = &#39;Waiting for you to stop typing...&#39;;
            this.debouncedGetAnswer();
        },
        // firstName: function (val) {
        //     this.fullName = val + &#39; &#39; + this.lastName
        // },
        // lastName: function (val) {
        //     this.fullName = this.firstName + &#39; &#39; + val
        // }
    },
    created: function () {
        // `_.debounce` 是一个通过 Lodash 限制操作频率的函数。
        // 在这个例子中，我们希望限制访问 yesno.wtf/api 的频率
        // AJAX 请求直到用户输入完毕才会发出。想要了解更多关于
        // `_.debounce` 函数 (及其近亲 `_.throttle`) 的知识，
        // 请参考：https://lodash.com/docs#debounce
        this.debouncedGetAnswer = _.debounce(this.getAnswer, 500)
    },
});</pre>
</div>

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/axios@0.12.0/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/lodash@4.13.1/lodash.min.js"></script>
    <script src="~/js/base/computed.js"></script>
}